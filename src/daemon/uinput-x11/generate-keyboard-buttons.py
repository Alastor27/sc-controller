#!/usr/bin/env python
from collections import OrderedDict
from cheader import defines

SCANS = OrderedDict([
	# This is map that gets converted to keycodes array
	# Generated by pressing everything in xev
	('KEY_ESC', 9),
	('KEY_1', 10),
	('KEY_2', 11),
	('KEY_3', 12),
	('KEY_4', 13),
	('KEY_5', 14),
	('KEY_6', 15),
	('KEY_7', 16),
	('KEY_8', 17),
	('KEY_9', 18),
	('KEY_0', 19),
	('KEY_MINUS', 20),
	('KEY_EQUAL', 21),
	('KEY_BACKSPACE', 22),
	('KEY_TAB', 23),
	('KEY_Q', 24),
	('KEY_W', 25),
	('KEY_E', 26),
	('KEY_R', 27),
	('KEY_T', 28),
	('KEY_Y', 29),
	('KEY_U', 30),
	('KEY_I', 31),
	('KEY_O', 32),
	('KEY_P', 33),
	('KEY_LEFTBRACE', 34),
	('KEY_RIGHTBRACE', 35),
	('KEY_ENTER', 36),
	('KEY_KPENTER', 104),
	('KEY_LEFTCTRL', 37),
	('KEY_RIGHTCTRL', 105),
	('KEY_A', 38),
	('KEY_S', 39),
	('KEY_D', 40),
	('KEY_F', 41),
	('KEY_G', 42),
	('KEY_H', 43),
	('KEY_J', 44),
	('KEY_K', 45),
	('KEY_L', 46),
	('KEY_SEMICOLON', 47),
	('KEY_APOSTROPHE', 48),
	('KEY_BACKSLASH', 51),
	('KEY_LEFTSHIFT', 50),
	('KEY_102ND', 61),
	('KEY_Z', 52),
	('KEY_X', 53),
	('KEY_C', 54),
	('KEY_V', 55),
	('KEY_B', 56),
	('KEY_N', 57),
	('KEY_M', 58),
	('KEY_COMMA', 59),
	('KEY_DOT', 60),
	('KEY_SLASH', 61),
	('KEY_KPSLASH', 106),
	('KEY_RIGHTSHIFT', 62),
	('KEY_SYSRQ', 107),
	('KEY_KPASTERISK', 63),
	('KEY_LEFTALT', 64),
	('KEY_RIGHTALT', 108),
	('KEY_SPACE', 65),
	('KEY_CAPSLOCK', 66),
	('KEY_F1', 67),
	('KEY_F2', 68),
	('KEY_F3', 69),
	('KEY_F4', 70),
	('KEY_F5', 71),
	('KEY_F6', 72),
	('KEY_F7', 73),
	('KEY_F8', 74),
	('KEY_F9', 75),
	('KEY_F10', 76),
	('KEY_F11', 95),
	('KEY_F12', 96),
	('KEY_NUMLOCK', 77),
	('KEY_PAUSE', 127),
	('KEY_SCROLLLOCK', 78),
	('KEY_UP', 111),
	('KEY_PAGEUP', 112),
	('KEY_LEFT', 113),
	('KEY_RIGHT', 114),
	('KEY_END', 115),
	('KEY_DOWN', 116),
	('KEY_PAGEDOWN', 117),
	('KEY_INSERT', 118),
	('KEY_DELETE', 119),
	('KEY_KPMINUS', 82),
	('KEY_KPPLUS', 86),
	('KEY_LEFTMETA', 113),
	('KEY_RIGHTMETA', 113),
	('KEY_COMPOSE', 135),
])

if __name__ == "__main__":
	chead = defines('../../../include/scc/', 'input-event-codes.h')
	output = open("keyboard_buttons.c", "w")
	
	print >>output, """/*
 * SC Controller - Virtual devices on X11 - Auto-generated arrays of keyboard buttons
 *
 * ========= THIS FILE IS AUTOGENERATED ==========
 * 
 * Generated by generate-keyboard-buttons.py from include/scc/input-event-codes.h
 * Probably don't edit by hand.
 */
#include "scc/input-event-codes.h"
#include <stdint.h>
#include <unistd.h>

static uint32_t _keyboard_x11_keycodes[] = {
""".strip("\n")
	
	key_names = { chead[k]: k for k in SCANS }
	largest_keycode = max(key_names.keys())
	for keycode in xrange(largest_keycode):
		key_name = key_names.get(keycode)
		value = SCANS.get(key_name, 0)
		print >>output, "\t0x%.5x,\t/* %s - %s */" % (value, keycode, key_name or "(not used)")
	
	print >>output, """};

uint32_t* keyboard_x11_keycodes = &_keyboard_x11_keycodes[0];
size_t keyboard_x11_keycode_count = sizeof(_keyboard_x11_keycodes) / sizeof(uint32_t);
"""
