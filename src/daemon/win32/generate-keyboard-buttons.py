#!/usr/bin/env python
from collections import OrderedDict
from cheader import defines

SCANS = OrderedDict([
	# This is map that gets converted to keyboard_scancodes array
	# Source: http://www.quadibloc.com/comp/scan.htm
	('KEY_ESC', 0x01),
	('KEY_1', 0x02),
	('KEY_2', 0x03),
	('KEY_3', 0x04),
	('KEY_4', 0x05),
	('KEY_5', 0x06),
	('KEY_6', 0x07),
	('KEY_7', 0x08),
	('KEY_8', 0x09),
	('KEY_9', 0x0A),
	('KEY_0', 0x0B),
	('KEY_MINUS', 0x0C),
	('KEY_EQUAL', 0x0D),
	('KEY_BACKSPACE', 0x0E),
	('KEY_TAB', 0x0F),
	('KEY_Q', 0x10),
	('KEY_W', 0x11),
	('KEY_E', 0x12),
	('KEY_R', 0x13),
	('KEY_T', 0x14),
	('KEY_Y', 0x15),
	('KEY_U', 0x16),
	('KEY_I', 0x17),
	('KEY_O', 0x18),
	('KEY_P', 0x19),
	('KEY_LEFTBRACE', 0x1A),
	('KEY_RIGHTBRACE', 0x1B),
	('KEY_ENTER', 0x1C),
	('KEY_KPENTER', 0xE01C),
	('KEY_LEFTCTRL', 0x1D),
	('KEY_RIGHTCTRL', 0xE01D),
	('KEY_A', 0x1E),
	('KEY_S', 0x1F),
	('KEY_D', 0x20),
	('KEY_F', 0x21),
	('KEY_G', 0x22),
	('KEY_H', 0x23),
	('KEY_J', 0x24),
	('KEY_K', 0x25),
	('KEY_L', 0x26),
	('KEY_SEMICOLON', 0x27),
	('KEY_APOSTROPHE', 0x28),
	('KEY_BACKSLASH', 0x29),
	('KEY_LEFTSHIFT', 0x2A),
	('KEY_102ND', 0x2B),
	('KEY_Z', 0x2C),
	('KEY_X', 0x2D),
	('KEY_C', 0x2E),
	('KEY_V', 0x2F),
	('KEY_B', 0x30),
	('KEY_N', 0x31),
	('KEY_M', 0x32),
	('KEY_COMMA', 0x33),
	('KEY_DOT', 0x34),
	('KEY_SLASH', 0x35),
	# KEY_KPSLASH 0x35+
	('KEY_RIGHTSHIFT', 0x36),
	('KEY_SYSRQ', 0x37),
	# KEY_KPASTERISK 0x37+
	# PrtSc 37/54+
	('KEY_LEFTALT', 0x38),
	('KEY_RIGHTALT', 0xE038),
	('KEY_SPACE', 0x39),
	('KEY_CAPSLOCK', 0x3A),
	('KEY_F1', 0x3B),
	('KEY_F2', 0x3C),
	('KEY_F3', 0x3D),
	('KEY_F4', 0x3E),
	('KEY_F5', 0x3F),
	('KEY_F6', 0x40),
	('KEY_F7', 0x41),
	('KEY_F8', 0x42),
	('KEY_F9', 0x43),
	('KEY_F10', 0x44),
	('KEY_F11', 0x57),
	('KEY_F12', 0x58),
	# KEY_NUMLOCK 45+
	# KEY_PAUSE 45/46+
	# KEY_SCROLLLOCK 46+
	# Home KP 0x47
	('KEY_UP', 0xE048),
	('KEY_PAGEUP', 0xE049),
	('KEY_LEFT', 0xE04B),
	('KEY_RIGHT', 0xE04D),
	('KEY_END', 0xE04F),
	('KEY_DOWN', 0xE050),
	('KEY_PAGEDOWN', 0xE051),
	('KEY_INSERT', 0xE052),
	('KEY_DELETE', 0xE053),
	('KEY_KPMINUS', 0x4A),
	('KEY_KPPLUS', 0x4E),
	('KEY_LEFTMETA', 0xE05B),
	('KEY_RIGHTMETA', 0xE05C),
	('KEY_COMPOSE', 0xE05D),
])

if __name__ == "__main__":
	chead = defines('../../../include/scc/', 'input-event-codes.h')
	output = open("keyboard_buttons.c", "w")
	
	print >>output, """/*
 * SC Controller - Virtual devices on Windows - Auto-generated arrays of keyboard buttons
 *
 * ========= THIS FILE IS AUTOGENERATED ==========
 * 
 * Generated by generate-keyboard-buttons.py from include/scc/input-event-codes.h
 * Probably don't edit by hand.
 */
#include "scc/input-event-codes.h"
#include <stdint.h>
#include <unistd.h>

static int32_t _keyboard_scancodes[] = {
""".strip("\n")
	
	key_names = { chead[k]: k for k in SCANS }
	largest_keycode = max(key_names.keys())
	for keycode in xrange(largest_keycode):
		key_name = key_names.get(keycode)
		value = SCANS.get(key_name, 0)
		print >>output, "\t0x%.5x,\t/* %s - %s */" % (value, keycode, key_name or "(not used)")
	
	print >>output, """};

int32_t* keyboard_scancodes = &_keyboard_scancodes[0];
size_t keyboard_scancode_count = sizeof(_keyboard_scancodes) / sizeof(int32_t);
"""
